{"version":3,"sources":["components/AddForm.js","components/Filter.js","components/ShowPerson.js","components/ShowPersons.js","components/Notification.js","services/db.js","App.js","index.js"],"names":["AddForm","props","onSubmit","submit","value","name","onChange","nameChange","number","numberChange","type","Filter","filter","filterChange","ShowPerson","deletePerson","onClick","person","id","ShowPersons","persons","show","map","key","delFunc","Notification","message","useEffect","notify","document","querySelector","setTimeout","title","className","baseUrl","newPerson","axios","post","then","response","data","delete","get","put","App","a","setPersons","service","success","msg","error","useState","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","showNotification","setShowNotification","notification","setNotification","personsToShow","toLowerCase","includes","delPerson","window","confirm","e","target","preventDefault","checkPerson","index","catch","err","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.03173e2a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst AddForm = (props) => {\r\n  return (\r\n    <>\r\n      <h2>Add new contact</h2>\r\n      <form onSubmit={props.submit}>\r\n        name: <input value={props.name} onChange={props.nameChange} />\r\n        <br />\r\n        number: <input value={props.number} onChange={props.numberChange} />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default AddForm;\r\n","import React from \"react\";\r\n\r\nconst Filter = (props) => {\r\n  return (\r\n    <>\r\n      filter: <input value={props.filter} onChange={props.filterChange} />\r\n    </>\r\n  );\r\n};\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst ShowPerson = (props) => {\r\n  const deletePerson = () => props.onClick(props.person.id, props.person.name);\r\n  const showPerson = () => (\r\n    <div>\r\n      {props.person.name} {props.person.number}{\" \"}\r\n      <button onClick={deletePerson}>delete</button>\r\n    </div>\r\n  );\r\n\r\n  return showPerson();\r\n};\r\nexport default ShowPerson;\r\n","import React from \"react\";\r\nimport ShowPerson from \"./ShowPerson\";\r\n\r\nconst ShowPersons = (props) => {\r\n  const persons = props.show;\r\n  const showPersons = (i) =>\r\n    i.map((person) => (\r\n      <ShowPerson key={person.id} person={person} onClick={props.delFunc} />\r\n    ));\r\n  return showPersons(persons);\r\n};\r\nexport default ShowPersons;\r\n","import React, { useEffect } from \"react\";\r\n\r\nconst Notification = ({ type, message }) => {\r\n  useEffect(() => {\r\n    const notify = document.querySelector(\".notification\");\r\n    setTimeout(() => {\r\n      notify.id = \"fade\";\r\n    }, 10);\r\n  }, []);\r\n\r\n  const title =\r\n    type === \"error\" ? (\r\n      <h2>Error!</h2>\r\n    ) : type === \"warning\" ? (\r\n      <h2>Alert!</h2>\r\n    ) : type === \"success\" ? (\r\n      <h2>Success!</h2>\r\n    ) : (\r\n      <h2>Notification!</h2>\r\n    );\r\n  return (\r\n    <notification id={type} className=\"notification\">\r\n      {title}\r\n      <br />\r\n      {message}\r\n    </notification>\r\n  );\r\n};\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"api/persons\";\r\n\r\nconst dbUpdate = (newPerson) => {\r\n  const request = axios.post(baseUrl, newPerson);\r\n  return request.then((response) => response.data);\r\n};\r\nconst dbUpdatePerson = (id, newPerson) => {\r\n  const request = axios.put(`${baseUrl}/${id.id}`, newPerson);\r\n  return request.then((response) => response.data);\r\n};\r\nconst dbDelPerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\nconst dbGetAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { dbUpdate, dbDelPerson, dbGetAll, dbUpdatePerson };\r\n","import React, { useState, useEffect } from \"react\";\nimport AddForm from \"./components/AddForm\";\nimport Filter from \"./components/Filter\";\nimport ShowPersons from \"./components/ShowPersons\";\nimport Notification from \"./components/Notification\";\nimport service from \"./services/db\";\n\nconst App = () => {\n  //get data from db\n  useEffect(() => {\n    (async () => {\n      setPersons(await service.dbGetAll());\n    })();\n  }, []);\n\n  //notifications\n  const warning = async (msg) => {\n    return { type: \"warning\", message: msg };\n  };\n  const success = async (msg) => {\n    return { type: \"success\", message: msg };\n  };\n  const error = async (msg) => {\n    return { type: \"error\", message: msg };\n  };\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value);\n  };\n  const handleFilterChange = (e) => {\n    setNewFilter(e.target.value);\n  };\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [newFilter, setNewFilter] = useState(\"\");\n  const [showNotification, setShowNotification] = useState(false);\n  const [notification, setNotification] = useState({\n    type: \"\",\n    message: \"\",\n  });\n\n  useEffect(() => {\n    if (notification.type !== \"\") {\n      //excludes onmount notify show\n      setShowNotification(true);\n      setTimeout(() => {\n        setShowNotification(false);\n      }, 4300);\n    }\n  }, [notification]);\n\n  //handle add/update person\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newPerson = { name: newName, number: newNumber };\n    const checkPerson = () => {\n      for (var person of persons) {\n        if (newPerson.name === person.name) {\n          return true;\n        }\n      }\n      return false;\n    };\n    (async () => {\n      //check newPerson.name displayed persons\n      let bool = checkPerson();\n      if (bool) {\n        //confirm data overwrite\n        let confirm = window.confirm(`Alert! '${newPerson.name}' is already in puhelinluettelo. \n        Update number?`);\n        if (confirm) {\n          //get index of updating data\n          let index = persons.filter((person) => {\n            if (newPerson.name === person.name) return person;\n          });\n          //update person data\n          try {\n            service\n              .dbUpdatePerson(index[0], newPerson)\n              .then(() => {\n                return (async () => {\n                  setNotification(await success(`${newPerson.name} updated!`));\n                  setPersons(await service.dbGetAll());\n                })();\n              })\n              .catch((err) => {\n                return (async () => {\n                  setNotification(await error(`${err.response.data.error}`));\n                })();\n              });\n          } catch (err) {\n            setNotification(await error(`${newPerson.name} already deleted!`));\n          }\n        }\n      } else {\n        //add newPerson data to db\n        service\n          .dbUpdate(newPerson)\n          .then(() => {\n            return (async () => {\n              setNotification(await success(`${newPerson.name} added!`));\n              setPersons(await service.dbGetAll());\n            })();\n          })\n          .catch((err) => {\n            return (async () => {\n              setNotification(await error(`${err.response.data.error}`));\n            })();\n          });\n      }\n    })();\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  //filter persons\n  const filterStatus = (filter) =>\n    filter === \"\"\n      ? persons\n      : persons.filter((person) => {\n          if (person.name.toLowerCase().includes(newFilter)) {\n            return person;\n          }\n        });\n  const personsToShow = filterStatus(newFilter);\n\n  const delPerson = async (id, name) => {\n    let confirm = window.confirm(`Delete '${name}' ?`);\n    if (confirm) {\n      await service.dbDelPerson(id);\n      setNotification(await success(`${name} deleted!`));\n      setPersons(await service.dbGetAll());\n    }\n  };\n\n  return (\n    <div>\n      {showNotification ? (\n        <Notification type={notification.type} message={notification.message} />\n      ) : (\n        <></>\n      )}\n\n      <h2>Phonebook</h2>\n      <Filter filter={newFilter} filterChange={handleFilterChange} />\n      <AddForm\n        submit={handleSubmit}\n        nameChange={handleNameChange}\n        numberChange={handleNumberChange}\n        name={newName}\n        number={newNumber}\n      />\n      <h2>Numbers</h2>\n\n      <ShowPersons show={personsToShow} delFunc={delPerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}